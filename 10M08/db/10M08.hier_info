|master_bridge
LED1 << master:master_m.LED1
LED2 << master:master_m.LED2
LED3 << master:master_m.LED3
LED4 << master:master_m.LED4
LED5 << master:master_m.LED5
clock => master:master_m.clock
cam_ena <> master:master_m.cam_ena
cam_ena <> ora:ora_0.ena
mclk <> ora:ora_0.mclk
pwdn << ora:ora_0.pwdn
vsync => ora:ora_0.vsync
href => ora:ora_0.href
pclk => ora:ora_0.pclk
cpi[0] => ora:ora_0.cpi[0]
cpi[1] => ora:ora_0.cpi[1]
cpi[2] => ora:ora_0.cpi[2]
cpi[3] => ora:ora_0.cpi[3]
cpi[4] => ora:ora_0.cpi[4]
cpi[5] => ora:ora_0.cpi[5]
cpi[6] => ora:ora_0.cpi[6]
cpi[7] => ora:ora_0.cpi[7]
sda <> i2c_master:i2c_master_0.sda
scl <> i2c_master:i2c_master_0.scl
umd_tx << uart:umd.tx
umd_rx => uart:umd.rx
reset_n <> master:master_m.reset_n


|master_bridge|master:master_m
LED1 <= <VCC>
LED2 <= <VCC>
LED3 <= LED3~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED4 <= LED4~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED5 <= <VCC>
clock => umd_clock.IN1
clock => i2c_clock.IN1
clock => ora_clock.IN1
clock => shdn.CLK
clock => LED4~reg0.CLK
clock => LED3~reg0.CLK
clock => \umd_listener:second_byte.CLK
clock => umd_rx_data[0]~reg0.CLK
clock => umd_rx_data[1]~reg0.CLK
clock => umd_rx_data[2]~reg0.CLK
clock => umd_rx_data[3]~reg0.CLK
clock => umd_rx_data[4]~reg0.CLK
clock => umd_rx_data[5]~reg0.CLK
clock => umd_rx_data[6]~reg0.CLK
clock => umd_rx_data[7]~reg0.CLK
clock => cam_ena~reg0.CLK
clock => umd_rx_stb~reg0.CLK
clock => next_state~1.DATAIN
clock => state_lock~4.DATAIN
clock => state~4.DATAIN
umd_clock <> umd_clock
i2c_clock <> i2c_clock
ora_clock <> ora_clock
i2c_ena <= i2c_ena~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_rw <= i2c_rw~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_wr[0] <= i2c_wr[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_wr[1] <= i2c_wr[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_wr[2] <= i2c_wr[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_wr[3] <= i2c_wr[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_wr[4] <= i2c_wr[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_wr[5] <= i2c_wr[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_wr[6] <= i2c_wr[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_wr[7] <= i2c_wr[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_rd[0] => ~NO_FANOUT~
i2c_rd[1] => ~NO_FANOUT~
i2c_rd[2] => ~NO_FANOUT~
i2c_rd[3] => ~NO_FANOUT~
i2c_rd[4] => ~NO_FANOUT~
i2c_rd[5] => ~NO_FANOUT~
i2c_rd[6] => ~NO_FANOUT~
i2c_rd[7] => ~NO_FANOUT~
i2c_bsy => init_camera.IN1
i2c_bsy => i2c_bsy_prev.DATAB
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => i2c_busy_cnt.OUTPUTSELECT
i2c_bsy => cam_ready.OUTPUTSELECT
umd_ena <> <VCC>
umd_rx_data[0] <> umd_rx_data[0]~reg0
umd_rx_data[1] <> umd_rx_data[1]~reg0
umd_rx_data[2] <> umd_rx_data[2]~reg0
umd_rx_data[3] <> umd_rx_data[3]~reg0
umd_rx_data[4] <> umd_rx_data[4]~reg0
umd_rx_data[5] <> umd_rx_data[5]~reg0
umd_rx_data[6] <> umd_rx_data[6]~reg0
umd_rx_data[7] <> umd_rx_data[7]~reg0
umd_rx_stb <> umd_rx_stb~reg0
ora_ena <> <VCC>
cam_ena <> cam_ena~reg0


|master_bridge|i2c_master:i2c_master_0
clk => data_rx[0].CLK
clk => data_rx[1].CLK
clk => data_rx[2].CLK
clk => data_rx[3].CLK
clk => data_rx[4].CLK
clk => data_rx[5].CLK
clk => data_rx[6].CLK
clk => data_rx[7].CLK
clk => data_tx[0].CLK
clk => data_tx[1].CLK
clk => data_tx[2].CLK
clk => data_tx[3].CLK
clk => data_tx[4].CLK
clk => data_tx[5].CLK
clk => data_tx[6].CLK
clk => data_tx[7].CLK
clk => addr_rw[0].CLK
clk => addr_rw[1].CLK
clk => addr_rw[2].CLK
clk => addr_rw[3].CLK
clk => addr_rw[4].CLK
clk => addr_rw[5].CLK
clk => addr_rw[6].CLK
clk => addr_rw[7].CLK
clk => data_rd[0]~reg0.CLK
clk => data_rd[1]~reg0.CLK
clk => data_rd[2]~reg0.CLK
clk => data_rd[3]~reg0.CLK
clk => data_rd[4]~reg0.CLK
clk => data_rd[5]~reg0.CLK
clk => data_rd[6]~reg0.CLK
clk => data_rd[7]~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => ack_error~reg0.CLK
clk => sda_int.CLK
clk => scl_ena.CLK
clk => busy~reg0.CLK
clk => data_clk.CLK
clk => scl_clk.CLK
clk => data_clk_prev.CLK
clk => stretch.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => state~1.DATAIN
reset_n => data_rd[0]~reg0.ACLR
reset_n => data_rd[1]~reg0.ACLR
reset_n => data_rd[2]~reg0.ACLR
reset_n => data_rd[3]~reg0.ACLR
reset_n => data_rd[4]~reg0.ACLR
reset_n => data_rd[5]~reg0.ACLR
reset_n => data_rd[6]~reg0.ACLR
reset_n => data_rd[7]~reg0.ACLR
reset_n => bit_cnt[0].PRESET
reset_n => bit_cnt[1].PRESET
reset_n => bit_cnt[2].PRESET
reset_n => ack_error~reg0.ACLR
reset_n => sda_int.PRESET
reset_n => scl_ena.ACLR
reset_n => busy~reg0.ACLR
reset_n => stretch.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => state~3.DATAIN
reset_n => data_clk_prev.ENA
reset_n => scl_clk.ENA
reset_n => data_clk.ENA
reset_n => addr_rw[7].ENA
reset_n => addr_rw[6].ENA
reset_n => addr_rw[5].ENA
reset_n => addr_rw[4].ENA
reset_n => addr_rw[3].ENA
reset_n => addr_rw[2].ENA
reset_n => addr_rw[1].ENA
reset_n => addr_rw[0].ENA
reset_n => data_tx[7].ENA
reset_n => data_tx[6].ENA
reset_n => data_tx[5].ENA
reset_n => data_tx[4].ENA
reset_n => data_tx[3].ENA
reset_n => data_tx[2].ENA
reset_n => data_tx[1].ENA
reset_n => data_tx[0].ENA
reset_n => data_rx[7].ENA
reset_n => data_rx[6].ENA
reset_n => data_rx[5].ENA
reset_n => data_rx[4].ENA
reset_n => data_rx[3].ENA
reset_n => data_rx[2].ENA
reset_n => data_rx[1].ENA
reset_n => data_rx[0].ENA
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => process_1.IN1
ena => busy.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => Selector0.IN6
ena => Selector18.IN4
ena => Selector17.IN2
ena => Selector22.IN1
addr[0] => addr_rw.DATAB
addr[0] => Equal2.IN6
addr[1] => addr_rw.DATAB
addr[1] => Equal2.IN5
addr[2] => addr_rw.DATAB
addr[2] => Equal2.IN4
addr[3] => addr_rw.DATAB
addr[3] => Equal2.IN3
addr[4] => addr_rw.DATAB
addr[4] => Equal2.IN2
addr[5] => addr_rw.DATAB
addr[5] => Equal2.IN1
addr[6] => addr_rw.DATAB
addr[6] => Equal2.IN0
rw => addr_rw.DATAB
rw => Equal2.IN7
data_wr[0] => data_tx.DATAB
data_wr[0] => Mux4.IN7
data_wr[1] => data_tx.DATAB
data_wr[1] => Mux4.IN6
data_wr[2] => data_tx.DATAB
data_wr[2] => Mux4.IN5
data_wr[3] => data_tx.DATAB
data_wr[3] => Mux4.IN4
data_wr[4] => data_tx.DATAB
data_wr[4] => Mux4.IN3
data_wr[5] => data_tx.DATAB
data_wr[5] => Mux4.IN2
data_wr[6] => data_tx.DATAB
data_wr[6] => Mux4.IN1
data_wr[7] => data_tx.DATAB
data_wr[7] => Mux4.IN0
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[0] <= data_rd[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[1] <= data_rd[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[2] <= data_rd[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[3] <= data_rd[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[4] <= data_rd[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[5] <= data_rd[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[6] <= data_rd[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[7] <= data_rd[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ack_error <= ack_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda
scl <> scl


|master_bridge|uart:umd
clock => uart_rx_data_in_ack.CLK
clock => uart_tx_count[0].CLK
clock => uart_tx_count[1].CLK
clock => uart_tx_count[2].CLK
clock => uart_tx_data_vec[0].CLK
clock => uart_tx_data_vec[1].CLK
clock => uart_tx_data_vec[2].CLK
clock => uart_tx_data_vec[3].CLK
clock => uart_tx_data_vec[4].CLK
clock => uart_tx_data_vec[5].CLK
clock => uart_tx_data_vec[6].CLK
clock => uart_tx_data_vec[7].CLK
clock => uart_tx_data.CLK
clock => tx_baud_tick.CLK
clock => tx_baud_counter[0].CLK
clock => tx_baud_counter[1].CLK
clock => tx_baud_counter[2].CLK
clock => tx_baud_counter[3].CLK
clock => tx_baud_counter[4].CLK
clock => tx_baud_counter[5].CLK
clock => tx_baud_counter[6].CLK
clock => tx_baud_counter[7].CLK
clock => tx_baud_counter[8].CLK
clock => tx_baud_counter[9].CLK
clock => uart_rx_data_out_stb.CLK
clock => uart_rx_count[0].CLK
clock => uart_rx_count[1].CLK
clock => uart_rx_count[2].CLK
clock => uart_rx_data_vec[0].CLK
clock => uart_rx_data_vec[1].CLK
clock => uart_rx_data_vec[2].CLK
clock => uart_rx_data_vec[3].CLK
clock => uart_rx_data_vec[4].CLK
clock => uart_rx_data_vec[5].CLK
clock => uart_rx_data_vec[6].CLK
clock => uart_rx_data_vec[7].CLK
clock => uart_rx_bit_spacing[0].CLK
clock => uart_rx_bit_spacing[1].CLK
clock => uart_rx_bit_spacing[2].CLK
clock => uart_rx_bit_spacing[3].CLK
clock => uart_rx_bit_tick.CLK
clock => uart_rx_bit.CLK
clock => uart_rx_filter[0].CLK
clock => uart_rx_filter[1].CLK
clock => uart_rx_data_sr[0].CLK
clock => uart_rx_data_sr[1].CLK
clock => rx_baud_tick.CLK
clock => rx_baud_counter[0].CLK
clock => rx_baud_counter[1].CLK
clock => rx_baud_counter[2].CLK
clock => rx_baud_counter[3].CLK
clock => rx_baud_counter[4].CLK
clock => rx_baud_counter[5].CLK
clock => uart_tx_state~4.DATAIN
clock => uart_rx_state~3.DATAIN
reset => rx_baud_counter.OUTPUTSELECT
reset => rx_baud_counter.OUTPUTSELECT
reset => rx_baud_counter.OUTPUTSELECT
reset => rx_baud_counter.OUTPUTSELECT
reset => rx_baud_counter.OUTPUTSELECT
reset => rx_baud_counter.OUTPUTSELECT
reset => rx_baud_tick.OUTPUTSELECT
reset => uart_rx_data_sr.OUTPUTSELECT
reset => uart_rx_data_sr.OUTPUTSELECT
reset => uart_rx_filter.OUTPUTSELECT
reset => uart_rx_filter.OUTPUTSELECT
reset => uart_rx_bit.OUTPUTSELECT
reset => uart_rx_state.OUTPUTSELECT
reset => uart_rx_state.OUTPUTSELECT
reset => uart_rx_state.OUTPUTSELECT
reset => uart_rx_data_vec.OUTPUTSELECT
reset => uart_rx_data_vec.OUTPUTSELECT
reset => uart_rx_data_vec.OUTPUTSELECT
reset => uart_rx_data_vec.OUTPUTSELECT
reset => uart_rx_data_vec.OUTPUTSELECT
reset => uart_rx_data_vec.OUTPUTSELECT
reset => uart_rx_data_vec.OUTPUTSELECT
reset => uart_rx_data_vec.OUTPUTSELECT
reset => uart_rx_count.OUTPUTSELECT
reset => uart_rx_count.OUTPUTSELECT
reset => uart_rx_count.OUTPUTSELECT
reset => uart_rx_data_out_stb.OUTPUTSELECT
reset => tx_baud_counter.OUTPUTSELECT
reset => tx_baud_counter.OUTPUTSELECT
reset => tx_baud_counter.OUTPUTSELECT
reset => tx_baud_counter.OUTPUTSELECT
reset => tx_baud_counter.OUTPUTSELECT
reset => tx_baud_counter.OUTPUTSELECT
reset => tx_baud_counter.OUTPUTSELECT
reset => tx_baud_counter.OUTPUTSELECT
reset => tx_baud_counter.OUTPUTSELECT
reset => tx_baud_counter.OUTPUTSELECT
reset => tx_baud_tick.OUTPUTSELECT
reset => uart_tx_data.OUTPUTSELECT
reset => uart_tx_data_vec.OUTPUTSELECT
reset => uart_tx_data_vec.OUTPUTSELECT
reset => uart_tx_data_vec.OUTPUTSELECT
reset => uart_tx_data_vec.OUTPUTSELECT
reset => uart_tx_data_vec.OUTPUTSELECT
reset => uart_tx_data_vec.OUTPUTSELECT
reset => uart_tx_data_vec.OUTPUTSELECT
reset => uart_tx_data_vec.OUTPUTSELECT
reset => uart_tx_count.OUTPUTSELECT
reset => uart_tx_count.OUTPUTSELECT
reset => uart_tx_count.OUTPUTSELECT
reset => uart_tx_state.OUTPUTSELECT
reset => uart_tx_state.OUTPUTSELECT
reset => uart_tx_state.OUTPUTSELECT
reset => uart_rx_data_in_ack.OUTPUTSELECT
data_stream_in[0] => uart_tx_data_vec.DATAB
data_stream_in[1] => uart_tx_data_vec.DATAB
data_stream_in[2] => uart_tx_data_vec.DATAB
data_stream_in[3] => uart_tx_data_vec.DATAB
data_stream_in[4] => uart_tx_data_vec.DATAB
data_stream_in[5] => uart_tx_data_vec.DATAB
data_stream_in[6] => uart_tx_data_vec.DATAB
data_stream_in[7] => uart_tx_data_vec.DATAB
data_stream_in_stb => uart_send_data.IN1
data_stream_in_ack <= uart_rx_data_in_ack.DB_MAX_OUTPUT_PORT_TYPE
data_stream_out[0] <= uart_rx_data_vec[0].DB_MAX_OUTPUT_PORT_TYPE
data_stream_out[1] <= uart_rx_data_vec[1].DB_MAX_OUTPUT_PORT_TYPE
data_stream_out[2] <= uart_rx_data_vec[2].DB_MAX_OUTPUT_PORT_TYPE
data_stream_out[3] <= uart_rx_data_vec[3].DB_MAX_OUTPUT_PORT_TYPE
data_stream_out[4] <= uart_rx_data_vec[4].DB_MAX_OUTPUT_PORT_TYPE
data_stream_out[5] <= uart_rx_data_vec[5].DB_MAX_OUTPUT_PORT_TYPE
data_stream_out[6] <= uart_rx_data_vec[6].DB_MAX_OUTPUT_PORT_TYPE
data_stream_out[7] <= uart_rx_data_vec[7].DB_MAX_OUTPUT_PORT_TYPE
data_stream_out_stb <= uart_rx_data_out_stb.DB_MAX_OUTPUT_PORT_TYPE
tx <= uart_tx_data.DB_MAX_OUTPUT_PORT_TYPE
rx => uart_rx_data_sr.DATAB


|master_bridge|ora:ora_0
gclk => c[3].CLK
gclk => c[2].CLK
gclk => c[1].CLK
gclk => c[0].CLK
gclk => pwdn~reg0.CLK
gclk => mclk~reg0.CLK
ena <> <UNC>
pwdn <= pwdn~reg0.DB_MAX_OUTPUT_PORT_TYPE
mclk <> mclk~reg0
vsync => ~NO_FANOUT~
href => ~NO_FANOUT~
pclk => ~NO_FANOUT~
cpi[0] => ~NO_FANOUT~
cpi[1] => ~NO_FANOUT~
cpi[2] => ~NO_FANOUT~
cpi[3] => ~NO_FANOUT~
cpi[4] => ~NO_FANOUT~
cpi[5] => ~NO_FANOUT~
cpi[6] => ~NO_FANOUT~
cpi[7] => ~NO_FANOUT~
ora_pkt_ct[0] <= <VCC>
ora_pkt_ct[1] <= <GND>
ora_pkt_ct[2] <= <GND>
ora_pkt_ct[3] <= <GND>
ora_pkt_ct[4] <= <GND>
ora_pkt_ct[5] <= <GND>
ora_pkt_ct[6] <= <GND>
ora_pkt_ct[7] <= <GND>
ora_pkt_ct[8] <= <GND>
ora_pkt_ct[9] <= <GND>
ora_pkt_ct[10] <= <GND>
ora_pkt_ct[11] <= <GND>
ora_pkt_ct[12] <= <GND>
ora_pkt_ct[13] <= <GND>
ora_pkt_ct[14] <= <GND>
ora_pkt_ct[15] <= <GND>
ora_pkt_ct[16] <= <GND>
ora_pkt_ct[17] <= <GND>
ora_pkt_ct[18] <= <GND>
ora_pkt_ct[19] <= <GND>
ora_pkt_ct[20] <= <GND>
ora_pkt_ct[21] <= <GND>
ora_pkt_ct[22] <= <GND>
ora_pkt_ct[23] <= <GND>
ora_pkt_ct[24] <= <GND>
ora_pkt_ct[25] <= <GND>
ora_pkt_ct[26] <= <GND>
ora_pkt_ct[27] <= <GND>
ora_pkt_ct[28] <= <GND>
ora_pkt_ct[29] <= <GND>
ora_pkt_ct[30] <= <GND>
ora_pkt_ct[31] <= <VCC>
ora_data[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
ora_data[1] <= ora_data[1].DB_MAX_OUTPUT_PORT_TYPE
ora_data[2] <= ora_data[2].DB_MAX_OUTPUT_PORT_TYPE
ora_data[3] <= ora_data[3].DB_MAX_OUTPUT_PORT_TYPE
ora_data[4] <= ora_data[4].DB_MAX_OUTPUT_PORT_TYPE
ora_data[5] <= ora_data[5].DB_MAX_OUTPUT_PORT_TYPE
ora_data[6] <= ora_data[6].DB_MAX_OUTPUT_PORT_TYPE
ora_data[7] <= ora_data[7].DB_MAX_OUTPUT_PORT_TYPE


