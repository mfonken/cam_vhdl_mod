|master
A <> hyperram:hyperram_0.A
B <> hyperram:hyperram_0.B
clock => hyperram:hyperram_0.clock
clock => ram_wr_data[0].CLK
clock => ram_wr_data[1].CLK
clock => ram_wr_data[2].CLK
clock => ram_wr_data[3].CLK
clock => ram_wr_data[4].CLK
clock => ram_wr_data[5].CLK
clock => ram_wr_data[6].CLK
clock => ram_wr_data[7].CLK
clock => ram_wr_data[8].CLK
clock => ram_wr_data[9].CLK
clock => ram_wr_data[10].CLK
clock => ram_wr_data[11].CLK
clock => ram_wr_data[12].CLK
clock => ram_wr_data[13].CLK
clock => ram_wr_data[14].CLK
clock => ram_wr_data[15].CLK
clock => ram_rd_request.CLK
clock => ram_wr_request.CLK
clock => \hrddram_test:state_counter[0].CLK
clock => \hrddram_test:state_counter[1].CLK
clock => \hrddram_test:state_counter[2].CLK
clock => \hrddram_test:state_counter[3].CLK
clock => \hrddram_test:state_counter[4].CLK
clock => \hrddram_test:state_counter[5].CLK
clock => \hrddram_test:state_counter[6].CLK
clock => \hrddram_test:state_counter[7].CLK
clock => \hrddram_test:state_counter[8].CLK
clock => \hrddram_test:state_counter[9].CLK
clock => \hrddram_test:state_counter[10].CLK
clock => \hrddram_test:state_counter[11].CLK
clock => \hrddram_test:state_counter[12].CLK
reset_n => hyperram:hyperram_0.reset_n
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => state_counter.OUTPUTSELECT
reset_n => ram_wr_request.OUTPUTSELECT
reset_n => ram_rd_request.OUTPUTSELECT
reset_n => ram_wr_data[3].ENA
reset_n => ram_wr_data[2].ENA
reset_n => ram_wr_data[1].ENA
reset_n => ram_wr_data[0].ENA
reset_n => ram_wr_data[4].ENA
reset_n => ram_wr_data[5].ENA
reset_n => ram_wr_data[6].ENA
reset_n => ram_wr_data[7].ENA
reset_n => ram_wr_data[8].ENA
reset_n => ram_wr_data[9].ENA
reset_n => ram_wr_data[10].ENA
reset_n => ram_wr_data[11].ENA
reset_n => ram_wr_data[12].ENA
reset_n => ram_wr_data[13].ENA
reset_n => ram_wr_data[14].ENA
reset_n => ram_wr_data[15].ENA
ram_rst << <VCC>
ram_cs_n << hyperram:hyperram_0.cs_n
ram_ck_p <> ram_ck_p
ram_ck_n << hyperram:hyperram_0.ck_n
ram_rwds <> hyperram:hyperram_0.rwds
ram_dq[0] <> hyperram:hyperram_0.dq[0]
ram_dq[1] <> hyperram:hyperram_0.dq[1]
ram_dq[2] <> hyperram:hyperram_0.dq[2]
ram_dq[3] <> hyperram:hyperram_0.dq[3]
ram_dq[4] <> hyperram:hyperram_0.dq[4]
ram_dq[5] <> hyperram:hyperram_0.dq[5]
ram_dq[6] <> hyperram:hyperram_0.dq[6]
ram_dq[7] <> hyperram:hyperram_0.dq[7]


|master|hyperram:hyperram_0
A <> A
B <> B
clock => internal_clock.CLK
clock => ddr_ck_div_counter[0].CLK
clock => ddr_ck_div_counter[1].CLK
clock => ddr_ck_div_counter[2].CLK
clock => ddr_ck_div_counter[3].CLK
clock => ddr_ck_div_counter[4].CLK
reset_n => wr_upper_byte.IN1
reset_n => read_write.IN1
reset_n => internal_ck_p.OUTPUTSELECT
reset_n => command_counter.OUTPUTSELECT
reset_n => command_counter.OUTPUTSELECT
reset_n => command_counter.OUTPUTSELECT
reset_n => command_counter.OUTPUTSELECT
reset_n => command_counter.OUTPUTSELECT
reset_n => next_control_state.OUTPUTSELECT
reset_n => next_control_state.OUTPUTSELECT
reset_n => next_control_state.OUTPUTSELECT
reset_n => next_data_state.OUTPUTSELECT
reset_n => next_data_state.OUTPUTSELECT
reset_n => next_data_state.OUTPUTSELECT
reset_n => data_counter[0].OUTPUTSELECT
reset_n => data_counter[1].OUTPUTSELECT
reset_n => data_counter[1].IN1
reset_n => data_counter[2].OUTPUTSELECT
reset_n => data_counter[3].OUTPUTSELECT
reset_n => data_counter[4].OUTPUTSELECT
reset_n => data_counter[5].OUTPUTSELECT
reset_n => data_counter[6].OUTPUTSELECT
reset_n => data_counter[7].OUTPUTSELECT
reset_n => data_counter[8].OUTPUTSELECT
reset_n => data_counter[9].OUTPUTSELECT
reset_n => data_counter[10].OUTPUTSELECT
reset_n => clock_divider.IN1
rd_data[0] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[1] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[2] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[3] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[4] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[5] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[6] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[7] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[8] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[9] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[10] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[11] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[12] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[13] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[14] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_data[15] <= internal_rd_upper.DB_MAX_OUTPUT_PORT_TYPE
rd_request => next_control_state.DATAA
rd_request => read_write.IN0
rd_request => next_control_state.DATAA
rd_length[0] => data_counter[0].DATAA
rd_length[1] => data_counter[1].DATAA
rd_length[2] => data_counter[2].DATAA
rd_length[3] => data_counter[3].DATAA
rd_length[4] => data_counter[4].DATAA
rd_length[5] => data_counter[5].DATAA
rd_length[6] => data_counter[6].DATAA
rd_length[7] => data_counter[7].DATAA
wr_data[0] => internal_data_out.DATAB
wr_data[1] => internal_data_out.DATAB
wr_data[2] => internal_data_out.DATAB
wr_data[3] => internal_data_out.DATAB
wr_data[4] => internal_data_out.DATAB
wr_data[5] => internal_data_out.DATAB
wr_data[6] => internal_data_out.DATAB
wr_data[7] => internal_data_out.DATAB
wr_data[8] => internal_data_out.DATAB
wr_data[9] => internal_data_out.DATAB
wr_data[10] => internal_data_out.DATAB
wr_data[11] => internal_data_out.DATAB
wr_data[12] => internal_data_out.DATAB
wr_data[13] => internal_data_out.DATAB
wr_data[14] => internal_data_out.DATAB
wr_data[15] => internal_data_out.DATAB
wr_request => next_control_state.OUTPUTSELECT
wr_request => next_control_state.OUTPUTSELECT
wr_request => read_write.IN1
wr_request => data_counter[0].OUTPUTSELECT
wr_request => data_counter[1].OUTPUTSELECT
wr_request => data_counter[2].OUTPUTSELECT
wr_request => data_counter[3].OUTPUTSELECT
wr_request => data_counter[4].OUTPUTSELECT
wr_request => data_counter[5].OUTPUTSELECT
wr_request => data_counter[6].OUTPUTSELECT
wr_request => data_counter[7].OUTPUTSELECT
wr_request => read_write.DATAIN
wr_length[0] => data_counter[0].DATAB
wr_length[1] => data_counter[1].DATAB
wr_length[2] => data_counter[2].DATAB
wr_length[3] => data_counter[3].DATAB
wr_length[4] => data_counter[4].DATAB
wr_length[5] => data_counter[5].DATAB
wr_length[6] => data_counter[6].DATAB
wr_length[7] => data_counter[7].DATAB
busy <> busy
strobe <> <UNC>
request_ack <= request_ack.DB_MAX_OUTPUT_PORT_TYPE
burst => Mux2.IN10
as => data_process.IN1
as => Mux1.IN9
row[0] => Mux1.IN55
row[1] => Mux0.IN53
row[2] => Mux7.IN66
row[3] => Mux6.IN66
row[4] => Mux5.IN66
row[5] => Mux4.IN66
row[6] => Mux3.IN65
row[7] => Mux2.IN64
row[8] => Mux1.IN63
row[9] => Mux0.IN61
row[10] => Mux7.IN3
row[11] => Mux6.IN3
row[12] => Mux5.IN3
col[0] => Mux7.IN16
col[1] => Mux6.IN16
col[2] => Mux5.IN16
col[3] => Mux7.IN58
col[4] => Mux6.IN58
col[5] => Mux5.IN58
col[6] => Mux4.IN58
col[7] => Mux3.IN57
col[8] => Mux2.IN56
cs_n <= busy~direct.DB_MAX_OUTPUT_PORT_TYPE
ck_p <= internal_ck_p.DB_MAX_OUTPUT_PORT_TYPE
ck_n <= internal_ck_p.DB_MAX_OUTPUT_PORT_TYPE
rwds <> rwds
dq[0] <> dq[0]
dq[1] <> dq[1]
dq[2] <> dq[2]
dq[3] <> dq[3]
dq[4] <> dq[4]
dq[5] <> dq[5]
dq[6] <> dq[6]
dq[7] <> dq[7]


